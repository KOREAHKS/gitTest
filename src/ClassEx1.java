/*
 * 자바에서 객체와 클래스 :  자바는 완벽한 객체지향 언어라는 평가를 받고 있는 언어임
 * 때문에 모든걸 객체로 만들어서 프로그래밍 하도록 지향하는데, 이를 OOP(Object Oriented Programming) 이라고 함
 * 자바에서는 객체(Instance) 를 생성하기 위해서는 반드시 이의 기반이 되는 class 를 정의해야함.
 * 즉 이말은 class 는 모든 객체의 설계도라고 생각하면 됨.
 * 예를 들어서, 여러분이 자동차 회사를 경영한다라고 했을때, 실제 소비자들은 현실에 존재하는 차(객체)를 타고, 달리고, 서고, 물건을 적재하며 이용함
 * 또한, 여러분이 차를 선택할때는 그 차가 가지고 있는 본연의 속성(차 색상,차 회사, 브랜드, 엔진타입, 마력, 최고속도 등)을
 * 기호에 맞게 선택하여 실제 차를 구매하게 되고, 위에 설명했듯이 현실속에서 차를 이용하게 됨.
 * 
 * 이처럼 객체지향 언어에서, 객체는 실제 존재하는 것을 뜻하고( 현실에 존재하는 차) , 이 차의 속성과 메서드를 통해서 차를 이용하듯이
 * 객체의 속성과 메서드를 이용해서 다른 객체와 프로그래밍을 만들어 가는 것이 OOP임.
 * 
 * 꼭 기억해야 할 것.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * 
 * 클래스를 정의 할 때는 3개를 꼭 기억해야 함
 * 
 * 클래스에는 3개의 항목을 정의 할 수 있는데,
 * 
 * 1.속성을 나타내는 필드(filed) --> 이 필드는 객체가 생성될때 객체에 복사되어 간다고 해서 멤버필드라고 합니다.
 * 
 * 2.기능을 정의 하는 메서드 --> 메서드를 호출하여 객체의 속성의 값을 변경, 주고 받으면서 다른 개체간의 통신역할을 수행함
 * 
 * 3.생성자 --> 객체를 생성하는 역할을 하면서, 필요에 따라서는 객체의 속성을 특정 값으로 초기화 하거나, 초기화 메서드를 호출하여
 * 객체 초기화 작업을 진행 할 수 있음. 이 생성자가 없으면 클래스가 있다 하여도, 객체를 만들 수 없음.
 * 자바는 모든 클래스에 기본적으로 컴파일시에 기본생성자(무인자 생성자)를 넣어준다. 단, 프로그래머가 클래스에 생성자를 하나도 정의 하지 않을 경우만 넣어주고,
 * 만약 하나라도 정의하면, 넣어주지 않는다.  꼭 기억
*/
public class ClassEx1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		//new 라는 키워드를 이용해서 생성자를 호출하면 객체를 만들 수 있음
		ClassEx1 a = new ClassEx1();
		ClassEx1 b = new ClassEx1();
		a = b;
		System.out.println(a);
		System.out.println(b);
		
		if(a == b) { // == 객체간에 사용되면 같은 객체인지를 확인 하는 코드임.. 즉 hash 가 같은지를 물어봄
			System.out.println("같은 객체입니다.");
		}else {
			System.out.println("틀린 객체입니다.");
		}
		
		//메서드 오버로딩의 예시.
		String email = "hanks92@naver.com";
		

		
		
		
		
		
		
		
		
		
		
		
	}

}
